syntax = "proto3";
// Automatically generated by goyang https://github.com/openconfig/goyang
// compiled 2018-02-26T09:03:11Z
// do not delete the next line
// goyang-version 1
// module "ietf-vxlan"
// revision "2018-01-03"
// revision "2017-06-29"
// revision "2016-12-08"
// revision "2016-06-02"
// revision "2015-12-01"
// revision "2015-10-12"
// revision "2015-05-05"
// namespace "urn:ietf:params:xml:ns:yang:ietf-vxlan"

// The YANG module defines a generic configuration
//  model for VxLAN protocol
package ietf_vxlan;

// VxLAN configure model.
message Vxlan {
  // VXLAN global enble.
  bool global_enable = 1;
  // vxlan instance list
  repeated Vxlan_VxlanInstance vxlan_instance = 2;
}

// vxlan instance list
message Vxlan_VxlanInstance {
  // The description information of VXLAN instance.
  string description = 1;
  // VRRP packets filter configuration of VXLAN instance.
  enum FilterVrrp {
    FilterVrrp_DISABLE = 0;
    FilterVrrp_ENABLE = 1;
  };
  FilterVrrp filter_vrrp = 2;
  // Redundancy group bind table.
  Vxlan_VxlanInstance_RedundancyGroupBinds redundancy_group_binds = 3;
  // Configure the static VxLAN tunnel
  repeated Vxlan_VxlanInstance_StaticVxlanTunnel static_vxlan_tunnel = 4;
  // Unknow unicast drop configuration of VXLAN instance.
  enum UnknowUnicastDrop {
    UnknowUnicastDrop_DISABLE = 0;
    UnknowUnicastDrop_ENABLE = 1;
  };
  UnknowUnicastDrop unknow_unicast_drop = 5;
  // VTEP instance.
  repeated Vxlan_VxlanInstance_VtepInstances vtep_instances = 6;
  // VxLAN access type choice.
  Vxlan_VxlanInstance_VxlanAccessTypes vxlan_access_types = 7;
  // VxLAN ID.
  uint32 vxlan_id = 8;
}

// Redundancy group bind table.
message Vxlan_VxlanInstance_RedundancyGroupBinds {
  // Redundancy group bind table.
  repeated Vxlan_VxlanInstance_RedundancyGroupBinds_RedundancyGroupBind redundancy_group_bind = 1;
}

// Redundancy group bind table.
message Vxlan_VxlanInstance_RedundancyGroupBinds_RedundancyGroupBind {
  // Redundancy group ID.
  uint32 redundancy_group = 1;
  // VXLAN ID binding by redundancy group.
  uint32 vxlan_id = 2;
}

// Configure the static VxLAN tunnel
message Vxlan_VxlanInstance_StaticVxlanTunnel {
  // Per-af params.
  repeated Vxlan_VxlanInstance_StaticVxlanTunnel_AddressFamily address_family = 1;
  // Static VxLAN tunnel ID.
  uint32 vxlan_tunnel_id = 2;
  // Name of the static VxLAN tunnel.
  string vxlan_tunnel_name = 3;
}

// Per-af params.
message Vxlan_VxlanInstance_StaticVxlanTunnel_AddressFamily {
  // Address family type value.
  enum Af {
    Af_IPV4 = 0;
    Af_IPV6 = 1;
  };
  Af af = 1;
  // VxLAN ID list for the VTEP.
  repeated Vxlan_VxlanInstance_StaticVxlanTunnel_AddressFamily_BindVxlanId bind_vxlan_id = 2;
  // Destination IP address for the static VxLAN tunnel
  string tunnel_destination_ip = 3;
  // Source IP address for the static VxLAN tunnel
  string tunnel_source_ip = 4;
}

// VxLAN ID list for the VTEP.
message Vxlan_VxlanInstance_StaticVxlanTunnel_AddressFamily_BindVxlanId {
  // VxLAN ID.
  uint32 vxlan_id = 1;
}

// VTEP instance.
message Vxlan_VxlanInstance_VtepInstances {
  // VxLAN ID list for the VTEP.
  repeated Vxlan_VxlanInstance_VtepInstances_BindVxlanId bind_vxlan_id = 1;
  // The inner vlan tag handling mode.
  enum InnerVlanHandlingMode {
    InnerVlanHandlingMode_DISCARD_INNER_VLAN = 0;
    InnerVlanHandlingMode_NO_DISCARD_INNER_VLAN = 1;
  };
  InnerVlanHandlingMode inner_vlan_handling_mode = 2;
  // vxlan mtu
  uint32 mtu = 3;
  // VxLAN multicast IP address.
  string multicast_ip = 4;
  // Source interface name.
  string source_interface = 5;
  // VTEP ID.
  uint32 vtep_id = 6;
  // VTEP instance name.
  string vtep_name = 7;
}

// VxLAN ID list for the VTEP.
message Vxlan_VxlanInstance_VtepInstances_BindVxlanId {
  // VxLAN ID.
  uint32 vxlan_id = 1;
}

// VxLAN access type choice.
message Vxlan_VxlanInstance_VxlanAccessTypes {
  // VxLAN access type choice is layer two interface.
  Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeL2Interface access_type_l2interface = 1;
  // VxLAN access type choice is layer three interface.
  Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeL3Interface access_type_l3interface = 2;
  // VxLAN access type choice is MAC Address.
  Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeMac access_type_mac = 3;
  // VxLAN access type choice is VLAN.
  Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeVlan access_type_vlan = 4;
}

// VxLAN access type choice is layer two interface.
message Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeL2Interface {
  // VXLAN map layer two interface.
  bool access_type_l2interface = 1;
  // Layer two interface name.
  string interface_name = 2;
  // VLAN ID.
  uint32 vlan_id = 3;
}

// VxLAN access type choice is layer three interface.
message Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeL3Interface {
  // Access type of VxLAN is layer three interface.
  bool access_type_l3interface = 1;
  // Layer three interface list.
  repeated Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeL3Interface_MapL3Interface map_l3interface = 2;
}

// Layer three interface list.
message Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeL3Interface_MapL3Interface {
  // Layer three interface name.
  string interface_name = 1;
}

// VxLAN access type choice is MAC Address.
message Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeMac {
  // Access type is MAC.
  bool access_type_mac = 1;
  // MAC Address.
  string mac = 2;
}

// VxLAN access type choice is VLAN.
message Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeVlan {
  // Access type is VLAN.
  enum AccessTypeVlan {
    AccessTypeVlan_ACCESS_TYPE_VLAN1TO1 = 0;
    AccessTypeVlan_ACCESS_TYPE_VLAN1TON = 1;
  };
  AccessTypeVlan access_type_vlan = 1;
  // VLAN ID list.
  repeated Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeVlan_AccessVlanList access_vlan_list = 2;
}

// VLAN ID list.
message Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeVlan_AccessVlanList {
  // VLAN ID.
  uint32 vlan_id = 1;
}

// Information of VXLAN state.
message VxlanState {
  // Information of VXLAN state.
  VxlanState_Vxlan vxlan = 1;
}

// Information of VXLAN state.
message VxlanState_Vxlan {
  // VXLAN tunnel Info.
  VxlanState_Vxlan_VxlanTunnels vxlan_tunnels = 1;
}

// VXLAN tunnel Info.
message VxlanState_Vxlan_VxlanTunnels {
  // VXLAN tunnel info.
  repeated VxlanState_Vxlan_VxlanTunnels_VxlanTunnel vxlan_tunnel = 1;
}

// VXLAN tunnel info.
message VxlanState_Vxlan_VxlanTunnels_VxlanTunnel {
  // EVPN tunnel ID.
  uint32 evpn_tunnel_id = 1;
  // Local IP of tunnel.
  enum LocalIp {
    LocalIp_IPV4 = 0;
    LocalIp_IPV6 = 1;
  };
  LocalIp local_ip = 2;
  // Remote IP of tunnel.
  enum RemoteIp {
    RemoteIp_IPV4 = 0;
    RemoteIp_IPV6 = 1;
  };
  RemoteIp remote_ip = 3;
  // Static tunnel ID.
  uint32 static_tunnel_id = 4;
  // Tunnel statistics.
  VxlanState_Vxlan_VxlanTunnel_Statistics statistics = 5;
}

// Tunnel statistics.
message VxlanState_Vxlan_VxlanTunnel_Statistics {
  // Total tunnel statistics.
  VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelStatistics tunnel_statistics = 1;
  // Statistics in VXLAN tunnel.
  VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelVniStatistics tunnel_vni_statistics = 2;
}

// Total tunnel statistics.
message VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelStatistics {
  // Total bytes received.
  string in_bytes = 1;
  // Total packets received.
  string in_packets = 2;
  // Total bytes sent.
  string out_bytes = 3;
  // Total packets sent.
  string out_packets = 4;
}

// Statistics in VXLAN tunnel.
message VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelVniStatistics {
  // Statistics in VXLAN tunnel.
  repeated VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelVniStatistics_TunnelVniStatistic tunnel_vni_statistic = 1;
}

// Statistics in VXLAN tunnel.
message VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelVniStatistics_TunnelVniStatistic {
  // Total bytes received.
  string in_bytes = 1;
  // Total packets received.
  string in_packets = 2;
  // Total bytes sent.
  string out_bytes = 3;
  // Total packets sent.
  string out_packets = 4;
  // The VXLAN in tunnel.
  uint32 vxlan_id = 5;
}

// Do not delete the lines below, they preserve tag information for goyang.
// goyang-tag Vxlan global_enable/bool 1
// goyang-tag Vxlan vxlan_instance/Vxlan_VxlanInstance[] 2
// goyang-tag VxlanState vxlan/VxlanState_Vxlan 1
// goyang-tag VxlanState_Vxlan vxlan_tunnels/VxlanState_Vxlan_VxlanTunnels 1
// goyang-tag VxlanState_Vxlan_VxlanTunnel_Statistics tunnel_statistics/VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelStatistics 1
// goyang-tag VxlanState_Vxlan_VxlanTunnel_Statistics tunnel_vni_statistics/VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelVniStatistics 2
// goyang-tag VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelStatistics in_bytes/string 1
// goyang-tag VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelStatistics in_packets/string 2
// goyang-tag VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelStatistics out_bytes/string 3
// goyang-tag VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelStatistics out_packets/string 4
// goyang-tag VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelVniStatistics tunnel_vni_statistic/VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelVniStatistics_TunnelVniStatistic[] 1
// goyang-tag VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelVniStatistics_TunnelVniStatistic in_bytes/string 1
// goyang-tag VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelVniStatistics_TunnelVniStatistic in_packets/string 2
// goyang-tag VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelVniStatistics_TunnelVniStatistic out_bytes/string 3
// goyang-tag VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelVniStatistics_TunnelVniStatistic out_packets/string 4
// goyang-tag VxlanState_Vxlan_VxlanTunnel_Statistics_TunnelVniStatistics_TunnelVniStatistic vxlan_id/uint32 5
// goyang-tag VxlanState_Vxlan_VxlanTunnels vxlan_tunnel/VxlanState_Vxlan_VxlanTunnels_VxlanTunnel[] 1
// goyang-tag VxlanState_Vxlan_VxlanTunnels_VxlanTunnel evpn_tunnel_id/uint32 1
// goyang-tag VxlanState_Vxlan_VxlanTunnels_VxlanTunnel local_ip/LocalIp 2
// goyang-tag VxlanState_Vxlan_VxlanTunnels_VxlanTunnel remote_ip/RemoteIp 3
// goyang-tag VxlanState_Vxlan_VxlanTunnels_VxlanTunnel static_tunnel_id/uint32 4
// goyang-tag VxlanState_Vxlan_VxlanTunnels_VxlanTunnel statistics/VxlanState_Vxlan_VxlanTunnel_Statistics 5
// goyang-tag Vxlan_VxlanInstance description/string 1
// goyang-tag Vxlan_VxlanInstance filter_vrrp/FilterVrrp 2
// goyang-tag Vxlan_VxlanInstance redundancy_group_binds/Vxlan_VxlanInstance_RedundancyGroupBinds 3
// goyang-tag Vxlan_VxlanInstance static_vxlan_tunnel/Vxlan_VxlanInstance_StaticVxlanTunnel[] 4
// goyang-tag Vxlan_VxlanInstance unknow_unicast_drop/UnknowUnicastDrop 5
// goyang-tag Vxlan_VxlanInstance vtep_instances/Vxlan_VxlanInstance_VtepInstances[] 6
// goyang-tag Vxlan_VxlanInstance vxlan_access_types/Vxlan_VxlanInstance_VxlanAccessTypes 7
// goyang-tag Vxlan_VxlanInstance vxlan_id/uint32 8
// goyang-tag Vxlan_VxlanInstance_RedundancyGroupBinds redundancy_group_bind/Vxlan_VxlanInstance_RedundancyGroupBinds_RedundancyGroupBind[] 1
// goyang-tag Vxlan_VxlanInstance_RedundancyGroupBinds_RedundancyGroupBind redundancy_group/uint32 1
// goyang-tag Vxlan_VxlanInstance_RedundancyGroupBinds_RedundancyGroupBind vxlan_id/uint32 2
// goyang-tag Vxlan_VxlanInstance_StaticVxlanTunnel address_family/Vxlan_VxlanInstance_StaticVxlanTunnel_AddressFamily[] 1
// goyang-tag Vxlan_VxlanInstance_StaticVxlanTunnel vxlan_tunnel_id/uint32 2
// goyang-tag Vxlan_VxlanInstance_StaticVxlanTunnel vxlan_tunnel_name/string 3
// goyang-tag Vxlan_VxlanInstance_StaticVxlanTunnel_AddressFamily af/Af 1
// goyang-tag Vxlan_VxlanInstance_StaticVxlanTunnel_AddressFamily bind_vxlan_id/Vxlan_VxlanInstance_StaticVxlanTunnel_AddressFamily_BindVxlanId[] 2
// goyang-tag Vxlan_VxlanInstance_StaticVxlanTunnel_AddressFamily tunnel_destination_ip/string 3
// goyang-tag Vxlan_VxlanInstance_StaticVxlanTunnel_AddressFamily tunnel_source_ip/string 4
// goyang-tag Vxlan_VxlanInstance_StaticVxlanTunnel_AddressFamily_BindVxlanId vxlan_id/uint32 1
// goyang-tag Vxlan_VxlanInstance_VtepInstances bind_vxlan_id/Vxlan_VxlanInstance_VtepInstances_BindVxlanId[] 1
// goyang-tag Vxlan_VxlanInstance_VtepInstances inner_vlan_handling_mode/InnerVlanHandlingMode 2
// goyang-tag Vxlan_VxlanInstance_VtepInstances mtu/uint32 3
// goyang-tag Vxlan_VxlanInstance_VtepInstances multicast_ip/string 4
// goyang-tag Vxlan_VxlanInstance_VtepInstances source_interface/string 5
// goyang-tag Vxlan_VxlanInstance_VtepInstances vtep_id/uint32 6
// goyang-tag Vxlan_VxlanInstance_VtepInstances vtep_name/string 7
// goyang-tag Vxlan_VxlanInstance_VtepInstances_BindVxlanId vxlan_id/uint32 1
// goyang-tag Vxlan_VxlanInstance_VxlanAccessTypes access_type_l2interface/Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeL2Interface 1
// goyang-tag Vxlan_VxlanInstance_VxlanAccessTypes access_type_l3interface/Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeL3Interface 2
// goyang-tag Vxlan_VxlanInstance_VxlanAccessTypes access_type_mac/Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeMac 3
// goyang-tag Vxlan_VxlanInstance_VxlanAccessTypes access_type_vlan/Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeVlan 4
// goyang-tag Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeL2Interface access_type_l2interface/bool 1
// goyang-tag Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeL2Interface interface_name/string 2
// goyang-tag Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeL2Interface vlan_id/uint32 3
// goyang-tag Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeL3Interface access_type_l3interface/bool 1
// goyang-tag Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeL3Interface map_l3interface/Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeL3Interface_MapL3Interface[] 2
// goyang-tag Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeL3Interface_MapL3Interface interface_name/string 1
// goyang-tag Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeMac access_type_mac/bool 1
// goyang-tag Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeMac mac/string 2
// goyang-tag Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeVlan access_type_vlan/AccessTypeVlan 1
// goyang-tag Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeVlan access_vlan_list/Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeVlan_AccessVlanList[] 2
// goyang-tag Vxlan_VxlanInstance_VxlanAccessTypes_AccessTypeVlan_AccessVlanList vlan_id/uint32 1
